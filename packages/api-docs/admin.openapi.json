{
  "openapi": "3.0.3",
  "info": {
    "version": "1.0.0",
    "title": "appser"
  },
  "paths": {
    "/account": {
      "get": {
        "tags": ["account"],
        "operationId": "getAccount",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "avatar": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 2000
                    }
                  },
                  "required": ["name", "id", "status"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/account/profile": {
      "put": {
        "tags": ["account"],
        "operationId": "updateAccountProfile",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 255
                  },
                  "avatar": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/account/password": {
      "post": {
        "tags": ["account"],
        "operationId": "changeAccountPassword",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "oldPwd": {
                    "type": "string"
                  },
                  "newPwd": {
                    "type": "string"
                  }
                },
                "required": ["oldPwd", "newPwd"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/account/policies": {
      "get": {
        "tags": ["account"],
        "operationId": "listAccountPolicy",
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/account/orgs": {
      "get": {
        "tags": ["account"],
        "operationId": "listAccountOrg",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": ["pending", "active", "failed"]
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": ["id", "status", "name"],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "tags": ["account"],
        "operationId": "createOrg",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255
                    }
                  },
                  "required": ["name", "id"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 128
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/auth/config": {
      "get": {
        "tags": ["auth"],
        "operationId": "getAuthConfig",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isInitialize": {
                      "type": "boolean"
                    },
                    "providers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "signup": {
                      "type": "string",
                      "enum": ["always", "never", "onlyByInvite"]
                    },
                    "canForgotPassword": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "isInitialize",
                    "providers",
                    "signup",
                    "canForgotPassword"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/auth/email": {
      "post": {
        "tags": ["auth"],
        "operationId": "authByEmail",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "accessToken": {
                      "type": "string"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "roleId": {
                      "type": "string"
                    },
                    "expiredAt": {
                      "type": "string"
                    }
                  },
                  "required": ["accessToken", "userId", "expiredAt"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "setCookie": {
                    "type": "boolean"
                  }
                },
                "required": ["email", "password"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/auth/revoke": {
      "post": {
        "tags": ["auth"],
        "operationId": "authRevoke",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/apps/{appId}": {
      "get": {
        "tags": ["app"],
        "operationId": "getApp",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "tintColor": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "orgId": {
                      "type": "string"
                    },
                    "bases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 255
                          },
                          "views": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": ["grid"]
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": ["id", "type"],
                              "additionalProperties": false
                            }
                          }
                        },
                        "required": ["views", "id"],
                        "additionalProperties": false
                      }
                    }
                  },
                  "required": ["id", "tintColor", "icon", "orgId", "bases"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "delete": {
        "tags": ["app"],
        "operationId": "deleteApp",
        "responses": {
          "200": {
            "description": "Default Response"
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "patch": {
        "tags": ["app"],
        "operationId": "updateApp",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "tintColor": {
                    "type": "string",
                    "enum": [
                      "#ccc",
                      "blue",
                      "green",
                      "#FF8787",
                      "#2C2E33",
                      "#CC5DE8",
                      "#845EF7",
                      "#5C7CFA",
                      "#339AF0",
                      "#22B8CF",
                      "#087F5B",
                      "#E67700",
                      "#D9480F"
                    ]
                  },
                  "icon": {
                    "type": "string",
                    "enum": [
                      "borderBottom",
                      "alignCenter",
                      "calibrate",
                      "editFade",
                      "feed",
                      "formatSeparator",
                      "magnet",
                      "overflow",
                      "today"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/apps/{appId}/people": {
      "get": {
        "tags": ["app"],
        "operationId": "listAppPeople",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orgId": {
                        "type": "string"
                      },
                      "appId": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": ["pending", "active", "failed"]
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          }
                        },
                        "required": ["id", "name"],
                        "additionalProperties": false
                      },
                      "role": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": ["id", "name"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["orgId", "appId", "status", "user", "role"],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "post": {
        "tags": ["app"],
        "operationId": "addAppPeople",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string",
                    "pattern": "^\\d+$"
                  },
                  "roleId": {
                    "type": "string"
                  }
                },
                "required": ["userId", "roleId"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/apps/{appId}/bases": {
      "post": {
        "tags": ["app"],
        "operationId": "createBase",
        "responses": {
          "201": {
            "description": "Created"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/apps/{appId}/roles": {
      "get": {
        "tags": ["app"],
        "operationId": "listAppRole",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "description": {
                        "type": "string",
                        "maxLength": 255
                      }
                    },
                    "required": ["name", "id"],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "appId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/invitation": {
      "get": {
        "tags": ["invite"],
        "operationId": "getInvitation",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inviter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 255
                        },
                        "avatar": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 2000
                        }
                      },
                      "required": ["name", "id"],
                      "additionalProperties": false
                    },
                    "currentUser": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 255
                        },
                        "avatar": {
                          "type": "string",
                          "format": "uri",
                          "maxLength": 2000
                        }
                      },
                      "required": ["name"],
                      "additionalProperties": false
                    },
                    "org": {
                      "anyOf": [
                        {
                          "not": {}
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "default": "106552770764473349"
                            },
                            "name": {
                              "type": "string",
                              "maxLength": 255
                            }
                          },
                          "required": ["name"],
                          "additionalProperties": false
                        }
                      ],
                      "nullable": true
                    }
                  },
                  "required": ["inviter"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "invitationToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/invite/accept": {
      "post": {
        "tags": ["invite"],
        "operationId": "acceptInvitation",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invitationToken": {
                    "type": "string"
                  }
                },
                "required": ["invitationToken"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/signup/email": {
      "post": {
        "tags": ["signup"],
        "operationId": "signupByEmail",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": ["id"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "invitationToken": {
                    "anyOf": [
                      {
                        "not": {}
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "nullable": true
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 128
                  }
                },
                "required": ["email", "password", "name"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        }
      }
    },
    "/bases/{baseId}": {
      "get": {
        "tags": ["base"],
        "operationId": "getBase",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "appId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "pos": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "field": {
                      "type": "object",
                      "additionalProperties": {
                        "allOf": [
                          {
                            "anyOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["checkbox"]
                                  }
                                },
                                "required": ["field"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["date"]
                                  },
                                  "options": {
                                    "type": "object",
                                    "properties": {
                                      "dynamicDefault": {
                                        "type": "string",
                                        "enum": ["now"]
                                      },
                                      "calendar": {
                                        "type": "string",
                                        "enum": [
                                          "gregory",
                                          "chinese",
                                          "hebrew",
                                          "islamic",
                                          "coptic",
                                          "indian",
                                          "ethiopic",
                                          "iso8601",
                                          "japanese",
                                          "persian"
                                        ]
                                      },
                                      "dateStyle": {
                                        "type": "string",
                                        "enum": [
                                          "full",
                                          "long",
                                          "medium",
                                          "short"
                                        ]
                                      },
                                      "timeStyle": {
                                        "type": "string",
                                        "enum": [
                                          "full",
                                          "long",
                                          "medium",
                                          "short"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["field"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["email"]
                                  }
                                },
                                "required": ["field"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["multipleSelect"]
                                  },
                                  "options": {
                                    "type": "object",
                                    "properties": {
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "default": "BWPoSF9b"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["name"],
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "required": ["items"],
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["field", "options"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["number"]
                                  },
                                  "options": {
                                    "type": "object",
                                    "properties": {
                                      "precision": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 8
                                      },
                                      "allowNegative": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": ["precision", "allowNegative"],
                                    "additionalProperties": false,
                                    "default": {
                                      "precision": 0,
                                      "allowNegative": false
                                    }
                                  }
                                },
                                "required": ["field"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["numId"]
                                  },
                                  "options": {
                                    "type": "object",
                                    "properties": {
                                      "dynamicDefault": {
                                        "type": "string",
                                        "enum": ["snowflakeId"]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["field"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["simpleText"]
                                  },
                                  "options": {
                                    "type": "object",
                                    "properties": {
                                      "match": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "default": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["field"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["singleSelect"]
                                  },
                                  "options": {
                                    "type": "object",
                                    "properties": {
                                      "items": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "default": "jUbwAu_M"
                                            },
                                            "name": {
                                              "type": "string"
                                            }
                                          },
                                          "required": ["name"],
                                          "additionalProperties": false
                                        }
                                      }
                                    },
                                    "required": ["items"],
                                    "additionalProperties": false
                                  }
                                },
                                "required": ["field", "options"],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string",
                                    "enum": ["url"]
                                  }
                                },
                                "required": ["field"],
                                "additionalProperties": false
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "maxLength": 255
                              },
                              "isRequired": {
                                "type": "boolean"
                              },
                              "isLocked": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "appId",
                    "field",
                    "id",
                    "createdAt",
                    "updatedAt"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "patch": {
        "tags": ["base"],
        "operationId": "updateBase",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 128
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/bases/{baseId}/fields": {
      "post": {
        "tags": ["base"],
        "operationId": "addColumn",
        "responses": {
          "201": {
            "description": "Created"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "field": {
                    "type": "string",
                    "enum": [
                      "checkbox",
                      "date",
                      "email",
                      "multipleSelect",
                      "number",
                      "numId",
                      "richText",
                      "simpleText",
                      "singleSelect",
                      "url"
                    ]
                  },
                  "options": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": {}
                  },
                  "currentViewId": {
                    "type": "string",
                    "pattern": "^\\d+$"
                  }
                },
                "required": ["field"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/bases/{baseId}/fields/{fieldName}": {
      "delete": {
        "tags": ["base"],
        "operationId": "deleteColumn",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "fieldName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "patch": {
        "tags": ["base"],
        "operationId": "updateColumn",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "options": {
                    "type": "object",
                    "additionalProperties": {}
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "fieldName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "put": {
        "tags": ["base"],
        "operationId": "resetColumn",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "field": {},
                  "options": {}
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "fieldName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/bases/{baseId}/views/{viewId}": {
      "get": {
        "tags": ["base"],
        "operationId": "getView",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": ["grid"]
                    },
                    "sorts": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "minItems": 1
                    },
                    "filter": {
                      "type": "object",
                      "properties": {
                        "and": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "eq": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "neq": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "gt": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "gte": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "lt": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "lte": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "in": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  }
                                },
                                "nin": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  }
                                },
                                "like": {
                                  "type": "string"
                                },
                                "notLike": {
                                  "type": "string"
                                },
                                "between": {
                                  "anyOf": [
                                    {
                                      "anyOf": [
                                        {
                                          "type": "array",
                                          "minItems": 3,
                                          "maxItems": 3,
                                          "items": [
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            {
                                              "anyOf": [
                                                {
                                                  "anyOf": [
                                                    {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": ["[]"]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": ["()"]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "enum": ["(]"]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "enum": ["[)"]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "array",
                                          "minItems": 2,
                                          "maxItems": 2,
                                          "items": [
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                },
                                "notBetween": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  }
                                },
                                "null": {
                                  "type": "boolean"
                                },
                                "notNull": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "or": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "eq": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "neq": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "gt": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "gte": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "lt": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "lte": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                },
                                "in": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  }
                                },
                                "nin": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  }
                                },
                                "like": {
                                  "type": "string"
                                },
                                "notLike": {
                                  "type": "string"
                                },
                                "between": {
                                  "anyOf": [
                                    {
                                      "anyOf": [
                                        {
                                          "type": "array",
                                          "minItems": 3,
                                          "maxItems": 3,
                                          "items": [
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            {
                                              "anyOf": [
                                                {
                                                  "anyOf": [
                                                    {
                                                      "anyOf": [
                                                        {
                                                          "type": "string",
                                                          "enum": ["[]"]
                                                        },
                                                        {
                                                          "type": "string",
                                                          "enum": ["()"]
                                                        }
                                                      ]
                                                    },
                                                    {
                                                      "type": "string",
                                                      "enum": ["(]"]
                                                    }
                                                  ]
                                                },
                                                {
                                                  "type": "string",
                                                  "enum": ["[)"]
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        {
                                          "type": "array",
                                          "minItems": 2,
                                          "maxItems": 2,
                                          "items": [
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            },
                                            {
                                              "anyOf": [
                                                {
                                                  "type": "string"
                                                },
                                                {
                                                  "type": "number"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ]
                                },
                                "notBetween": {
                                  "type": "array",
                                  "items": {
                                    "anyOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      }
                                    ]
                                  }
                                },
                                "null": {
                                  "type": "boolean"
                                },
                                "notNull": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "field": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "pos": {
                            "type": "number"
                          },
                          "width": {
                            "type": "integer"
                          },
                          "selected": {
                            "type": "boolean"
                          }
                        },
                        "required": ["pos", "selected"],
                        "additionalProperties": false
                      }
                    },
                    "stickyField": {
                      "type": "number"
                    },
                    "appId": {
                      "type": "string"
                    },
                    "baseId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "type",
                    "field",
                    "appId",
                    "baseId",
                    "sorts",
                    "stickyField"
                  ],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "patch": {
        "tags": ["base"],
        "operationId": "updateView",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sorts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "default": ["-id"]
                  },
                  "filter": {
                    "type": "object",
                    "properties": {
                      "and": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "eq": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "neq": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "gt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "gte": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "lt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "lte": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "in": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "nin": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "like": {
                                "type": "string"
                              },
                              "notLike": {
                                "type": "string"
                              },
                              "between": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "minItems": 3,
                                        "maxItems": 3,
                                        "items": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "anyOf": [
                                                  {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": ["[]"]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": ["()"]
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": ["(]"]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": ["[)"]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 2,
                                        "maxItems": 2,
                                        "items": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              "notBetween": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "null": {
                                "type": "boolean"
                              },
                              "notNull": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "or": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "eq": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "neq": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "gt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "gte": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "lt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "lte": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "in": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "nin": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "like": {
                                "type": "string"
                              },
                              "notLike": {
                                "type": "string"
                              },
                              "between": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "minItems": 3,
                                        "maxItems": 3,
                                        "items": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "anyOf": [
                                                  {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": ["[]"]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": ["()"]
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": ["(]"]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": ["[)"]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 2,
                                        "maxItems": 2,
                                        "items": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              "notBetween": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "null": {
                                "type": "boolean"
                              },
                              "notNull": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "stickyField": {
                    "type": "number",
                    "default": 1
                  },
                  "field": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "pos": {
                          "type": "number"
                        },
                        "width": {
                          "type": "integer"
                        },
                        "selected": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "delete": {
        "tags": ["base"],
        "operationId": "deleteView",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/bases/{baseId}/views": {
      "post": {
        "tags": ["base"],
        "operationId": "addView",
        "responses": {
          "201": {
            "description": "Created"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 50
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/bases/{baseId}/views/{viewId}/records": {
      "post": {
        "tags": ["base"],
        "operationId": "addRecord",
        "responses": {
          "201": {
            "description": "Created"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "additionalProperties": {}
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/bases/{baseId}/views/{viewId}/records/query": {
      "post": {
        "tags": ["base"],
        "operationId": "queryRecord",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": ["id"],
                        "additionalProperties": {}
                      }
                    },
                    "pageToken": {
                      "type": "integer"
                    }
                  },
                  "required": ["records"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "object",
                    "properties": {
                      "and": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "eq": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "neq": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "gt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "gte": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "lt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "lte": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "in": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "nin": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "like": {
                                "type": "string"
                              },
                              "notLike": {
                                "type": "string"
                              },
                              "between": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "minItems": 3,
                                        "maxItems": 3,
                                        "items": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "anyOf": [
                                                  {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": ["[]"]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": ["()"]
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": ["(]"]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": ["[)"]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 2,
                                        "maxItems": 2,
                                        "items": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              "notBetween": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "null": {
                                "type": "boolean"
                              },
                              "notNull": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "or": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "eq": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "neq": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "gt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "gte": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "lt": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "lte": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  }
                                ]
                              },
                              "in": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "nin": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "like": {
                                "type": "string"
                              },
                              "notLike": {
                                "type": "string"
                              },
                              "between": {
                                "anyOf": [
                                  {
                                    "anyOf": [
                                      {
                                        "type": "array",
                                        "minItems": 3,
                                        "maxItems": 3,
                                        "items": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "anyOf": [
                                                  {
                                                    "anyOf": [
                                                      {
                                                        "type": "string",
                                                        "enum": ["[]"]
                                                      },
                                                      {
                                                        "type": "string",
                                                        "enum": ["()"]
                                                      }
                                                    ]
                                                  },
                                                  {
                                                    "type": "string",
                                                    "enum": ["(]"]
                                                  }
                                                ]
                                              },
                                              {
                                                "type": "string",
                                                "enum": ["[)"]
                                              }
                                            ]
                                          }
                                        ]
                                      },
                                      {
                                        "type": "array",
                                        "minItems": 2,
                                        "maxItems": 2,
                                        "items": [
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          },
                                          {
                                            "anyOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              }
                                            ]
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  {
                                    "type": "string"
                                  }
                                ]
                              },
                              "notBetween": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "null": {
                                "type": "boolean"
                              },
                              "notNull": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "sorts": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "selects": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    ]
                  },
                  "pageSize": {
                    "type": "integer",
                    "maximum": 100,
                    "default": 50
                  },
                  "pageToken": {
                    "type": "integer"
                  }
                },
                "required": ["filter"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/bases/{baseId}/views/{viewId}/records/{recordId}": {
      "get": {
        "tags": ["base"],
        "operationId": "getRecord",
        "responses": {
          "200": {
            "description": "Default Response"
          }
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "patch": {
        "tags": ["base"],
        "operationId": "updateRecord",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "additionalProperties": {}
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "viewId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/bases/{baseId}/records/{recordId}": {
      "delete": {
        "tags": ["base"],
        "operationId": "deleteRecord",
        "responses": {
          "200": {
            "description": "Default Response"
          }
        },
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "recordId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": ["user"],
        "operationId": "getUser",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "avatar": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 2000
                    }
                  },
                  "required": ["name", "id", "status"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/orgs/{orgId}": {
      "get": {
        "tags": ["org"],
        "operationId": "getOrg",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "image": {
                      "type": "string",
                      "format": "uri",
                      "maxLength": 2000
                    }
                  },
                  "required": ["name", "id"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "delete": {
        "tags": ["org"],
        "operationId": "deleteOrg",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "patch": {
        "tags": ["org"],
        "operationId": "updateOrg",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  }
                },
                "required": ["name"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/orgs/{orgId}/apps": {
      "post": {
        "tags": ["org"],
        "operationId": "createOrgApp",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "orgId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "tintColor": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string"
                    }
                  },
                  "required": ["id", "orgId", "tintColor", "icon"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 128
                  },
                  "tintColor": {
                    "type": "string",
                    "enum": [
                      "#ccc",
                      "blue",
                      "green",
                      "#FF8787",
                      "#2C2E33",
                      "#CC5DE8",
                      "#845EF7",
                      "#5C7CFA",
                      "#339AF0",
                      "#22B8CF",
                      "#087F5B",
                      "#E67700",
                      "#D9480F"
                    ]
                  },
                  "icon": {
                    "type": "string",
                    "enum": [
                      "borderBottom",
                      "alignCenter",
                      "calibrate",
                      "editFade",
                      "feed",
                      "formatSeparator",
                      "magnet",
                      "overflow",
                      "today"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      },
      "get": {
        "tags": ["org"],
        "operationId": "listOrgApp",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "orgId": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "tintColor": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "icon": {
                        "type": "string",
                        "maxLength": 255
                      }
                    },
                    "required": ["orgId", "tintColor", "icon", "id"],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/orgs/{orgId}/people": {
      "get": {
        "tags": ["org"],
        "operationId": "listOrgPeople",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "orgId": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string",
                        "enum": ["pending", "active", "failed"]
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "avatar": {
                            "type": "string"
                          }
                        },
                        "required": ["id", "name"],
                        "additionalProperties": false
                      },
                      "role": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": ["id", "name"],
                        "additionalProperties": false
                      }
                    },
                    "required": ["orgId", "status", "user", "role"],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "kind",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["member", "outsideCollaborator", "pending", "failed"]
            }
          }
        ]
      }
    },
    "/orgs/{orgId}/roles": {
      "get": {
        "tags": ["org"],
        "operationId": "listOrgRole",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255
                      },
                      "description": {
                        "type": "string",
                        "maxLength": 255
                      }
                    },
                    "required": ["name", "id"],
                    "additionalProperties": false
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/orgs/{orgId}/people/{userId}/role": {
      "patch": {
        "tags": ["org"],
        "operationId": "changeOrgPeopleRole",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string",
                    "pattern": "^\\d+$"
                  }
                },
                "required": ["roleId"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/orgs/{orgId}/people/{userId}": {
      "delete": {
        "tags": ["org"],
        "operationId": "removeOrgPeople",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    },
    "/orgs/{orgId}/invitation": {
      "post": {
        "tags": ["org"],
        "operationId": "createOrgInvitation",
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invitationToken": {
                      "type": "string"
                    }
                  },
                  "required": ["invitationToken"],
                  "additionalProperties": false
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  }
                },
                "required": ["roleId"],
                "additionalProperties": false
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^\\d+$"
            }
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {},
    "responses": {
      "error": {
        "description": "Error Response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer"
                    },
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "detail": {}
                  },
                  "required": ["statusCode", "code"],
                  "additionalProperties": false
                }
              },
              "required": ["error"],
              "additionalProperties": false
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
